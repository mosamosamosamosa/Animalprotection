name: Auto Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers for cms
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache-cms
          key: ${{ runner.os }}-buildx-cms-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-cms-

      - name: Cache Docker layers for bff
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache-bff
          key: ${{ runner.os }}-buildx-bff-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-bff-

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get git commit short hash
        id: get-commit
        run: echo "::set-output name=commit_hash::$(git rev-parse --short HEAD)"

      - name: Build and push Docker image for cms
        uses: docker/build-push-action@v2
        with:
          context: ./cms
          push: true
          file: ./cms/Dockerfile
          platforms: linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache-cms
          cache-to: type=local,dest=/tmp/.buildx-cache-cms-new
          tags: yumekiti/anitection-cms:${{ steps.get-commit.outputs.commit_hash }}
          build-args: |
            APP_KEYS=${{ secrets.APP_KEYS }}
            API_KEYS=${{ secrets.API_KEYS }}
            ADMIN_JWR_SECRET=${{ secrets.ADMIN_JWR_SECRET }}
            TRANSFER_TOKEN_SALT=${{ secrets.TRANSFER_TOKEN_SALT }}
            JWT_SECRET=${{ secrets.JWT_SECRET }}

      - name: Update deployment.yaml for cms
        run: |
          sed -i "s/yumekiti\/anitection-cms:.*/yumekiti\/anitection-cms:${{ steps.get-commit.outputs.commit_hash }}/" .argocd/deployment.yaml

      - name: Build and push Docker image for bff
        uses: docker/build-push-action@v2
        with:
          context: ./bff
          push: true
          file: ./bff/Dockerfile
          platforms: linux/arm64
          cache-from: type=local,src=/tmp/.buildx-cache-bff
          cache-to: type=local,dest=/tmp/.buildx-cache-bff-new
          tags: yumekiti/anitection-bff:${{ steps.get-commit.outputs.commit_hash }}

      - name: Update deployment.yaml for bff
        run: |
          sed -i "s/yumekiti\/anitection-bff:.*/yumekiti\/anitection-bff:${{ steps.get-commit.outputs.commit_hash }}/" .argocd/deployment.yaml

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache-cms
          mv /tmp/.buildx-cache-cms-new /tmp/.buildx-cache-cms
          rm -rf /tmp/.buildx-cache-bff
          mv /tmp/.buildx-cache-bff-new /tmp/.buildx-cache-bff

      - name: Commit and push changes to main branch
        run: |
          git config --global user.name '${{ secrets.GIT_USERNAME }}'
          git config --global user.email '${{ secrets.GIT_USEREMAIL }}'
          git pull origin main
          git add .
          git commit --no-verify -m "Update Docker images and ArgoCD versions"
          git push origin main
